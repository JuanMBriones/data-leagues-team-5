source("~/.active-rstudio-document", echo=TRUE)
version
clearPushBack()
devtools::document()
devtools::document(".")
devtools::document(pkg = ",")
devtools::document(pkg = ".")
library(roxygen2)
#' Calculate compose probability of the fact table
#'
#' @param a Index of goals in home
#' @param b Index of gaols away
#' @return The value of the index of a and b of the matrix
#' @examples
#' composeProb(1, 1)
#' composeProb(2, 5)
composeProb <- function(a, b) {
result <- relFreq[a+1, b+1] # por como trabaja R
print(result)
}
?
library(roxygen2)
source("~/Developer/DataScience/BEDU/R/DataLeagues/functions.R")
stop()
?source
library(devtools)
library(roxygen2)
roxygenise(DataLeagues)
getwd
getwd()
roxygenise("DataLeagues")
ç
?ComposeProb-function
?composeProb
example("composeProb")
getwb()
getwd()
devtools::install("DataLeagues")
devtools::install("DataLeagues.Rproj")
devtools::load_all()
?composeProb
devtools::load_all()
rm(list = c("composeProb"))
devtools::load_all()
?composeProb
library(DataLeagues)
load("~/BEDU/ProgramacionYEstadisticaConR/data-leagues-team-5/.RData")
league <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
goals <- league[, c("FTHG", "FTAG")]
goalsMap <- table(goals)
relFreq <- prop.table(goalsMap)
colSum <- colSums(relFreq)
rowSum <- rowSums(relFreq)
install.packages("roxygen2")
league <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
goals <- league[, c("FTHG", "FTAG")]
(goalsMap <- table(goals))
(relFreq <- prop.table(goalsMap))
partidos_liga_española_df <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
casa <- partidos_liga_española_df$FTHG
(visitante <- partidos_liga_española_df$FTAG)
(goles <- as.data.frame(cbind(casa, visitante)))
(total_de_partidos <- length(casa))
library(dplyr)
(matriz_goles <- table(goles))
(frecuencia_goles_casa <- rowSums(matriz_goles))
(frecuencia_goles_visitante <- colSums(matriz_goles))
(probabilidad_goles_casa <- c(frecuencia_goles_casa / total_de_partidos))
(probabilidad_goles_visitante <- c(frecuencia_goles_visitante / total_de_partidos))
(tabla_casa <- as.data.frame(cbind(names(frecuencia_goles_casa), frecuencia_goles_casa, probabilidad_goles_casa)))
(tabla_visitante <- as.data.frame(cbind(names(frecuencia_goles_visitante), frecuencia_goles_visitante, probabilidad_goles_visitante)))
(conjunta <- paste(goles$casa, goles$visitante, sep="_"))
conjunta
(frecuencia_conjunta <- table(conjunta))
duplas <- names(frecuencia_conjunta)
(prob_con <- frecuencia_conjunta / total_de_partidos)
(tabla_conjunta <- as.data.frame(cbind(duplas, frecuencia_conjunta, prob_con)))
probabilidad_conjunta <- as.data.frame(matriz_goles / total_de_partidos)
probabilidad_conjunta
(tabla_casa <- as.data.frame(cbind(names(frecuencia_goles_casa), frecuencia_goles_casa, probabilidad_goles_casa)))
(tabla_visitante <- as.data.frame(cbind(names(frecuencia_goles_visitante), frecuencia_goles_visitante, probabilidad_goles_visitante)))
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
suppressMessages(suppressWarnings(library(dplyr)))
u1011 <- "https://www.football-data.co.uk/mmz4281/1920/SP1.csv"
u1112 <- "https://www.football-data.co.uk/mmz4281/1819/SP1.csv"
u1213 <- "https://www.football-data.co.uk/mmz4281/1718/SP1.csv"
download.file(url = u1011, destfile = "esp20.csv", mode = "wb")
download.file(url = u1112, destfile = "esp19.csv", mode = "wb")
download.file(url = u1213, destfile = "esp18.csv", mode = "wb")
(lista <- lapply(dir(), read.csv))
head(lista[[1]]); head(lista[[2]]); head(lista[[3]])
str(lista[[1]]); str(lista[[2]]); str(lista[[3]])
View(lista[[1]]); View(lista[[2]]); View(lista[[3]])
nueva_lista <- lapply(lista, select, c("Date", "HomeTeam", "AwayTeam", "FTHG", "FTAG", "FTR"))
nueva_lista <- lapply(nueva_lista, mutate, Date = as.Date(Date, "%d/%m/%Y"))
data_partidos_18_21 <- do.call(rbind, nueva_lista)
View(data_partidos_18_21)
goles <- select(FTGH, FTAG)
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
goles <- select(FTGH, FTAG)
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
write.csv(data_partidos_18_21, "Partidos_18_21.csv", row.names = FALSE)
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
goles <- select(FTGH, FTAG)
goles <- select(data_partidos_18_21, FTGH, FTAG)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
goles <- select(data_partidos_18_21, FTGH, FTAG)
goles <- select(data_partidos_18_21, FTHG, FTAG)
goles
View(data_partidos_18_21)
tabla_goles <- select(data_partidos_18_21, FTHG, FTAG)
df_goles <- select(data_partidos_18_21, FTHG, FTAG)
str(df_goles)
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
df_goles <- select(data_partidos_18_21, FTHG, FTAG)
prob_casa <- as.data.frame(prop.table(table(df_goles$FTHG)))
prob_visitante <- as.data.frame(prop.table(table(df_goles$FTAG)))
prob_conjunta <- as.data.frame(prop.table(table(FTHG = data$FTHG,
FTAG = data$FTAG)))
prob_conjunta <- as.data.frame(prop.table(table(FTHG = df_goles$FTHG,
FTAG = df_goles$FTAG)))
prob_conjunta
hist_casa <- ggplot(prob_casa, aes(x=FTHG, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark()
library(ggplot2)
hist_casa <- ggplot(prob_casa, aes(x=FTHG, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark()
hist_casa
hist_casa <- ggplot(prob_casa, aes(x=FTHG, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark()
hist_casa
prob_casa
prob_casa <- as.data.frame(prop.table(table(goles_casa = df_goles$FTHG)))
prob_casa
prob_visitante <- as.data.frame(prop.table(table(goles_visitante= df_goles$FTAG)))
hist_casa <- ggplot(prob_casa, aes(x=goles_casa, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark()
hist_casa
prob_casa <- as.data.frame(prop.table(table(goles = df_goles$FTHG)))
prob_visitante <- as.data.frame(prop.table(table(goles = df_goles$FTAG)))
prob_conjunta <- as.data.frame(prop.table(table(goles_casa = df_goles$FTHG,
goles_visitante = df_goles$FTAG)))
hist_casa <- ggplot(prob_casa, aes(x=goles, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark()
hist_casa
hist_casa <- ggplot(prob_casa, aes(x=goles, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark() +
title("Frecuencia de goles jugando en casa")
hist_casa
hist_casa <- ggplot(prob_casa, aes(x=goles, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark() +
ggtitle("Frecuencia de goles jugando en casa")
hist_casa
bar_casa <- ggplot(prob_casa, aes(x=goles, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark() +
ggtitle("Frecuencia de goles jugando en casa")
bar_casa <- ggplot(prob_visitante, aes(x=goles, y=Freq)) +
geom_bar(stat='identity') +
ylab("Frecuencia") +
theme_dark() +
ggtitle("Frecuencia de goles jugando como visitante")
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles")
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="white", high="blue")
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_distiller(palette = "RdPu")
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_viridis(discrete=FALSE)
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
library(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="white", high="blue") +
theme_ipsum()
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="white", high="blue") +
theme_dark()
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="white", high="blue") +
theme_ft_rc()
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="red", high="blue") +
theme_ft_rc()
heat_conjunta
heat_conjunta <- ggplot(prob_conjunta, aes(x=goles_casa, y=goles_visitante, fill=Freq)) +
geom_tile() +
ggtitle("Heatmap goles") +
scale_fill_gradient(low="pink", high="blue") +
theme_ft_rc()
heat_conjunta
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
library(ggplot2)
library(plotly)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
probRatio <- function(md) {
library(tensor)
t1 <- prop.table(table(md$FTHG))
t2 <- prop.table(table(md$FTAG))
t3 <- prop.table(table(md$FTHG, md$FTAG))
ext_prod <- as.data.frame(tensor::tensor(t1, t2))
ext_prod_inv <- apply(ext_prod, c(1, 2), '^', -1)
res <- as.data.frame(ext_prod_inv * t3)
res <- rename(res, c(Gols_casa=Var1, Gols_vis=Var2, cociente=Freq))
return(res)
}
probRatio(data_partidos_18_21)
df_cociente <- probRatio(data_partidos_18_21)
df_cociente <- probRatio(data_partidos_18_21)
bootstrap <- replicate(n=10000, sample(df_cociente$cociente, replace = TRUE))
df_cociente
bootstrap <- replicate(n=10000, sample(df_cociente$cociente, replace = TRUE))
dim(bootstrap)
medias <- apply(bootstrap, MARGIN = 2, FUN = mean)
length(medias)
desv_est <- sqrt(sum((medias - media_muestral) ** 2) / ncol(bootstrap))
media_muestral <- mean(df_cociente$cociente)
bootstrap <- replicate(n=10000, sample(df_cociente$cociente, replace = TRUE))
medias <- apply(bootstrap, MARGIN = 2, FUN = mean)
desv_est <- sqrt(sum((medias - media_muestral) ** 2) / length(medias))
hist_bootstrap <- ggplot() +
geom_histogram(aes(x = medias), color="black") +
geom_vline(xintercept = media_muestral, size=1, color="darkred")
hist_bootstrap
hist_bootstrap <- ggplot() +
geom_histogram(aes(x = medias), color="black") +
geom_vline(xintercept = media_muestral, size=1, color="darkred") +
theme_ft_rc()
hist_bootstrap
hist_bootstrap <- ggplot() +
geom_histogram(aes(x = medias), color="black") +
geom_vline(xintercept = media_muestral, size=1, color="darkred") +
theme_ft_rc() +
ylab("Frecuencia")
hist_bootstrap
hist_bootstrap <- ggplot() +
geom_histogram(aes(x = medias), color="black") +
geom_vline(xintercept = media_muestral, size=1, color="darkred") +
theme_ft_rc() +
ylab("Frecuencia") +
ggtitle("Histograma de las medias")
hist_bootstrap
source("~/BEDU/ProgramacionYEstadisticaConR/data-leagues-team-5/Postwork/PostworkSesion1.R", encoding = 'UTF-8')
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
suppressMessages(suppressWarnings(library(dplyr)))
u1011 <- "https://www.football-data.co.uk/mmz4281/1920/SP1.csv"
u1112 <- "https://www.football-data.co.uk/mmz4281/1819/SP1.csv"
u1213 <- "https://www.football-data.co.uk/mmz4281/1718/SP1.csv"
download.file(url = u1011, destfile = "esp20.csv", mode = "wb")
download.file(url = u1112, destfile = "esp19.csv", mode = "wb")
download.file(url = u1213, destfile = "esp18.csv", mode = "wb")
(lista <- lapply(dir(), read.csv))
head(lista[[1]]); head(lista[[2]]); head(lista[[3]])
str(lista[[1]]); str(lista[[2]]); str(lista[[3]])
View(lista[[1]]); View(lista[[2]]); View(lista[[3]])
summary(lista[[1]]); summary(lista[[2]]); summary(lista[[3]])
nueva_lista <- lapply(lista, select, c("Date", "HomeTeam", "AwayTeam", "FTHG", "FTAG", "FTR"))
nueva_lista <- lapply(nueva_lista, mutate, Date = as.Date(Date, "%d/%m/%Y"))
data_partidos_18_21 <- do.call(rbind, nueva_lista)
write.csv(data_partidos_18_21, "Partidos_18_21.csv", row.names = FALSE)
View(data_partidos_18_21)
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
library(ggplot2)
library(plotly)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
str(data_partidos_18_21)
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
library(ggplot2)
library(plotly)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
probRatio <- function(md) {
library(tensor)
t1 <- prop.table(table(md$FTHG))
t2 <- prop.table(table(md$FTAG))
t3 <- prop.table(table(md$FTHG, md$FTAG))
# 1- Crear una matriz con los productos de cada elemento del vector con la
#    probabilidad de los goles de casa "probabilidad_goles_casa" con cada uno de
#    los elementos del vector que almacena la probabilidad de goles visitante
#   "probabilidad_goles_visitante"
ext_prod <- as.data.frame(tensor::tensor(t1, t2))
# 2- Obtener el inverso multiplicativo de cada elemento de la matriz anterior "prod"
ext_prod_inv <- apply(ext_prod, c(1, 2), '^', -1)
# 3- Obtener la matriz resultante del producto elemento a elemento de la matriz
#    anterior con la matriz de probabilidad de goles "matriz_prob_goles"
res <- as.data.frame(ext_prod_inv * t3)
res <- rename(res, c(Gols_casa=Var1, Gols_vis=Var2, cociente=Freq))
return(res)
}
df_cociente <- probRatio(data_partidos_18_21)
df_cociente
setwd("c:/Users/eherr/OneDrive/Documents/BEDU/ProgramacionYEstadisticaConR/Sesion2/Files/PostworkSesion2")
library(dplyr)
library(tensor)
library(ggplot2)
library(plotly)
data_partidos_18_21 <- read.csv("Partidos_18_21.csv")
probRatio <- function(md) {
library(tensor)
t1 <- prop.table(table(md$FTHG))
t2 <- prop.table(table(md$FTAG))
t3 <- prop.table(table(md$FTHG, md$FTAG))
# 1- Crear una matriz con los productos de cada elemento del vector con la
#    probabilidad de los goles de casa "probabilidad_goles_casa" con cada uno de
#    los elementos del vector que almacena la probabilidad de goles visitante
#   "probabilidad_goles_visitante"
ext_prod <- as.data.frame(tensor::tensor(t1, t2))
# 2- Obtener el inverso multiplicativo de cada elemento de la matriz anterior "prod"
ext_prod_inv <- apply(ext_prod, c(1, 2), '^', -1)
# 3- Obtener la matriz resultante del producto elemento a elemento de la matriz
#    anterior con la matriz de probabilidad de goles "matriz_prob_goles"
res <- as.data.frame(ext_prod_inv * t3)
res <- rename(res, c(Gols_casa=Var1, Gols_vis=Var2, cociente=Freq))
return(res)
}
df_cociente <- probRatio(data_partidos_18_21)
df_cociente <- probRatio(data_partidos_18_21)
df_cociente
media_muestral <- mean(df_cociente$cociente)
mple(df_cociente$cociente
dim(bootstrap)
medias <- apply(bootstrap, MARGIN = 2, FUN = mean)
bootstrap <- replicate(n=10000, sample(df_cociente$cociente, replace = TRUE))
medias <- apply(bootstrap, MARGIN = 2, FUN = mean)
desv_est <- sqrt(sum((medias - media_muestral) ** 2) / length(medias))
medias
desv_est
hist_bootstrap
hist_bootstrap <- ggplot() +
geom_histogram(aes(x = medias), color="black") +
geom_vline(xintercept = media_muestral, size=1, color="darkred") +
theme_ft_rc() +
ylab("Frecuencia") +
ggtitle("Histograma de las medias")
hist_bootstrap
hist_bootstrap <- ggplot() +
geom_histogram(aes(x = medias), color="black") +
geom_vline(xintercept = media_muestral, size=1, color="darkred") +
ylab("Frecuencia") +
ggtitle("Histograma de las medias")
hist_bootstrap
desv_est <- sqrt(sum((medias - media_muestral) ** 2) / length(medias))
prueba_dos_colas(medias, mu=1)
prueba_dos_colas <- function(ma_cociente, mu = 1){
n <- length(ma_cociente)
# Prueba
estadistico <- (mean(ma_cociente, na.rm = TRUE) - mu)/(sd(ma_cociente, na.rm = TRUE)/n**(1/2))
pvalue <- pnorm(abs(estadistico), lower.tail = FALSE)*2
return(pvalue)
}
prueba_dos_colas(medias, mu=1)
t.test(medias)
norm.test(medias)
setwd("../Sesion5/Files/")
nyc <- read.csv("nyc.csv", header = TRUE)
tail(nyc, 2)
dim(nyc)
attach(nyc)
pairs(~ Price + Food + Decor + Service, data = nyc, gap = 0.4, cex.labels = 1.5)
cor(nyc)
cor(Price, Food)
cor(Price, Decor)
cor(~)
m1 <- lm(Price ~ Food + Decor + Service + East)
summary(m1)
summary(nyc)
m2 <- lm(Price ~ Food + Decor + East)
summary(m2)
m2 <- update(m1, ~.-Service)
summary(m2)
mfull <- lm(Price ~ Food + Decor + Service + East +
Food:East + Decor:East + Service:East)
summary(mfull)
anova(m2,mfull)
summary(m2)
plot(m2$fitted.values, Price, xlab = "Valores ajustados", ylab = "Price")
abline(lsfit(m2$fitted.values, Price))
pairs(~ Food + Decor, data = nyc, gap = 0.4, cex.labels = 1.5)
StanRes2 <- rstandard(m2)
par(mfrow = c(2, 2))
plot(Food, StanRes2, ylab = "Residuales Estandarizados")
plot(Decor, StanRes2, ylab = "Residuales Estandarizados")
plot(East, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
qqnorm(StanRes2)
qqline(StanRes2)
hist(StanRes2)
shapiro.test(StanRes2)
library(dplyr)
library(e1071)
library(ggplot2)
library(ISLR)
?Default
data <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2021/main/Sesion-05/Reto-01/advertising.csv")
tail(data, 2)
dim(data)
attach(data)
pairs(~ Sales + Newspaper + Radio + TV, data = data, gap = 0.4, cex.labels = 1.5) # ~ todas contra todas
m1 <- lm(Sales ~ Newspaper + Radio + TV)
summary(m1)
m2 <- lm(Sales ~ Radio + TV)
summary(m2)
plot(m2$fitted.values, Price, xlab = "Valores ajustados", ylab = "Sales")
plot(m2$fitted.values, Sales, xlab = "Valores ajustados", ylab = "Sales")
abline(lsfit(m2$fitted.values, Sales))
plot(m2$fitted.values, Sales, xlab = "Valores ajustados", ylab = "Sales")
abline(lsfit(m2$fitted.values, Sales))
plot(m2$fitted.values, Sales, xlab = "Valores ajustados", ylab = "Sales")
abline(lsfit(m2$fitted.values, Sales))
summary(m2)
plot(m2$fitted.values, Sales, xlab = "Valores ajustados", ylab = "Sales")
plot(m2$fitted.values, Sales, xlab = "Valores ajustados", ylab = "Sales")
abline(lsfit(m2$fitted.values, Sales))
StanRes2 <- rstandard(m2)
par(mfrow = c(2, 2))
plot(Radio, StanRes2, ylab = "Residuales Estandarizados")
plot(TV, StanRes2, ylab = "Residuales Estandarizados")
qqnorm(StanRes2)
qqline(StanRes2)
hist(StanRes2)
detach(nyc)
library(dplyr)
library(e1071)
library(ggplot2)
library(ISLR)
head(Default)
tail(Default)
dim(Default)
str(Default)
ggplot(Default, aes(x = balance, y = income, colour = default)) +
geom_point() + facet_wrap('student') +
theme_grey() + ggtitle("Datos Default")
set.seed(2020)
train = sample(nrow(Default),
round(nrow(Default)/2))
tail(Default[train, ])
ggplot(Default[train, ],
aes(x = balance, y = income, colour = default)) +
geom_point() + facet_wrap('student') +
theme_dark() + ggtitle("Conjunto de entrenamiento")
ggplot(Default[-train, ],
aes(x = balance, y = income, colour = default)) +
geom_point() + facet_wrap('student') +
theme_light() + ggtitle("Conjunto de prueba")
tune.rad = tune(svm, default~., data = Default[train,],
kernel = "radial",
ranges = list(
cost = c(0.1, 1, 10, 100, 1000),
gamma = seq(0.01, 10, 0.5)
)
)
